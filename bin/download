#!/usr/bin/env ruby

require "faraday"
require "faraday/follow_redirects"

require "fileutils"

if ARGV.size != 2
  puts "Usage: #{$0} {sites.txt} {output_dir}"
  exit 1
end

sites = File.readlines(ARGV[0]).map(&:chomp)
output_dir = File.expand_path(ARGV[1])

puts "Downloading #{sites.size} sites to #{output_dir}"

FileUtils.mkdir_p(output_dir)

def fix_encoding(str)
  str.encode('utf-8')
rescue Encoding::UndefinedConversionError
  str.force_encoding('iso-8859-1').encode('utf-8')
end

metadata = JSON.parse(File.read("metadata.json"), symbolize_names: true)

metadata.each do |site, meta|
  next unless meta[:no_js]

  site = site.to_s
  idx = meta[:idx]

  out_file = File.join(output_dir, "#{idx}.html")
  next if File.exist?(out_file)

  puts "Downloading #{idx + 1}/#{metadata.size}: #{site}"

  faraday = Faraday.new do |cfg|
    cfg.response :follow_redirects
    cfg.adapter Faraday.default_adapter
  end

  response = faraday.get(site)

  File.write(out_file, fix_encoding(response.body))
end